/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frames;

import constantes.Constantes;
import dominio.Paciente;
import dominio.Persona;
import interfaces.IPersistenciaFachada;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import negocio.PersistenciaFachada;

/**
 *
 * @author Usuario
 */
public class PacienteDialog extends javax.swing.JFrame {

    static Paciente paciente;
    static Persona persona;
    static int seleccion;
    IPersistenciaFachada persistenciaFachada;

    /**
     * Creates new form agregarPacienteP2
     *
     * @param myPaciente
     * @param persona
     */
    public PacienteDialog(Paciente myPaciente, Persona persona, int seleccion) {
        initComponents();
        this.paciente = myPaciente;
        this.seleccion = seleccion;
        txtPeso.setText(Float.toString(myPaciente.getPeso()));
        txtTalla.setText(Float.toString(myPaciente.getTalla()));
        txtAltura.setText(Float.toString(myPaciente.getEstatura()));
        txtAreaConsulta.setText(myPaciente.getMotivoConsulta());

        persistenciaFachada = PersistenciaFachada.getInstance();

        this.persona = persona;
        this.setVisible(true);
        this.setLocationRelativeTo(null);
    }

    public static Paciente getPaciente() {
        if (paciente != null) {
            return paciente;
        }
        return new Paciente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnAtras = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        txtTalla = new javax.swing.JTextField();
        txtAltura = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaConsulta = new javax.swing.JTextArea();
        btnLimpiar = new javax.swing.JButton();
        btnFinalzar = new javax.swing.JButton();
        btnAgregarDieta = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agregar paciente");
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(783, 642));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(867, 618));

        btnAtras.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/atras1.PNG"))); // NOI18N
        btnAtras.setToolTipText("");
        btnAtras.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAtras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAtrasMouseClicked(evt);
            }
        });
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jLabel1.setText("Talla(CM):");

        jLabel2.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jLabel2.setText("Peso(KG):");

        jLabel3.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jLabel3.setText("Motivo de la consulta:");

        jLabel4.setFont(new java.awt.Font("OCR A Extended", 1, 24)); // NOI18N
        jLabel4.setText("Altura(CM):");

        txtPeso.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtPeso.setCaretColor(new java.awt.Color(153, 255, 153));
        txtPeso.setDisabledTextColor(new java.awt.Color(153, 255, 153));
        txtPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesoActionPerformed(evt);
            }
        });
        txtPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesoKeyTyped(evt);
            }
        });

        txtTalla.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTallaActionPerformed(evt);
            }
        });
        txtTalla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTallaKeyTyped(evt);
            }
        });

        txtAltura.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtAltura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAlturaKeyTyped(evt);
            }
        });

        txtAreaConsulta.setColumns(20);
        txtAreaConsulta.setRows(5);
        jScrollPane1.setViewportView(txtAreaConsulta);

        btnLimpiar.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnFinalzar.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        btnFinalzar.setText("Finalizar");
        btnFinalzar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 0)));
        btnFinalzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalzarActionPerformed(evt);
            }
        });

        btnAgregarDieta.setFont(new java.awt.Font("OCR A Extended", 0, 18)); // NOI18N
        btnAgregarDieta.setText("Agregar Dieta");
        btnAgregarDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDietaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAgregarDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPeso, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                .addComponent(txtTalla)
                                .addComponent(txtAltura))))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnFinalzar, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAtras)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtTalla, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addComponent(btnAgregarDieta)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinalzar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 153));

        Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/LogoC_SinFondo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(305, 305, 305)
                .addComponent(Logo)
                .addContainerGap(296, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Logo)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesoActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        dispose();
        try {
            PersonaDialog ap = new PersonaDialog(persona, paciente, seleccion);
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAtrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtrasMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAtrasMouseClicked

    private void btnFinalzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalzarActionPerformed
        int idPaciente = paciente.getIdPaciente();
        if (validacion()) {

            paciente = new Paciente(txtAreaConsulta.getText(), paciente.getDieta(), Float.parseFloat(txtPeso.getText()), Float.parseFloat(txtAltura.getText()), Float.parseFloat(txtTalla.getText()));
            paciente.setIdPaciente(idPaciente);
            guardarCambios(paciente, persona);
            dispose();
        }
    }//GEN-LAST:event_btnFinalzarActionPerformed

    public void guardarCambios(Paciente myPaciente, Persona persona) {

        Paciente paciente = new Paciente(myPaciente.getMotivoConsulta(), myPaciente.getDieta(), myPaciente.getPeso(), myPaciente.getEstatura(), myPaciente.getTalla(),
                persona.getNombre(), persona.getApellidos(), myPaciente.getEdad(), persona.getSexo(), persona.getFechaNacimiento(),
                persona.getTelefono(), persona.getEmail());
        paciente.setIdPaciente(myPaciente.getIdPaciente());

        switch (seleccion) {
            case Constantes.AGREGAR:
                if (persistenciaFachada.registrarPaciente(paciente)) {
                    JOptionPane.showMessageDialog(null, "Paciente guardado con éxito.",
                            "Paciente", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Ocurrió un error al guardar el paciente",
                            "Paciente", JOptionPane.INFORMATION_MESSAGE);
                }
                break;
            case Constantes.ACTUALIZAR:
                if (persistenciaFachada.actualizarPaciente(paciente.getIdPaciente(), paciente)) {
                    JOptionPane.showMessageDialog(null, "Paciente actualizado con éxito.",
                            "Paciente", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Ocurrió un error al actualizar el paciente.",
                            "Paciente", JOptionPane.INFORMATION_MESSAGE);
                }
                break;

        }

    }


    private void txtTallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTallaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTallaActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        btnLimpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtPesoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesoKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = (key >= 48 && key <= 57) || key == 46;

        if (!numeros) {
            evt.consume();
        }

        String text = txtPeso.getText();
        if (text.contains(".") && key == 46) { // permitir solo un punto
            evt.consume();
        }

        if (text.trim().length() == 6 && key != KeyEvent.VK_BACK_SPACE) { // permitir borrar
            evt.consume();
        }
    }//GEN-LAST:event_txtPesoKeyTyped

    private void txtTallaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTallaKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = (key >= 48 && key <= 57) || key == 46;

        if (!numeros) {
            evt.consume();
        }

        String text = txtTalla.getText();
        if (text.contains(".") && key == 46) { // permitir solo un punto
            evt.consume();
        }

        if (text.trim().length() == 6 && key != KeyEvent.VK_BACK_SPACE) { // permitir borrar
            evt.consume();
        }
    }//GEN-LAST:event_txtTallaKeyTyped

    private void txtAlturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlturaKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = (key >= 48 && key <= 57) || key == 46;

        if (!numeros) {
            evt.consume();
        }

        String text = txtAltura.getText();
        if (text.contains(".") && key == 46) { // permitir solo un punto
            evt.consume();
        }

        if (text.trim().length() == 6 && key != KeyEvent.VK_BACK_SPACE) { // permitir borrar
            evt.consume();
        }
    }//GEN-LAST:event_txtAlturaKeyTyped

    private void btnAgregarDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDietaActionPerformed
        new CatalogoDieta(paciente, Constantes.ACTUALIZAR).setVisible(true);
    }//GEN-LAST:event_btnAgregarDietaActionPerformed

    private void btnLimpiar() {
        this.txtTalla.setText("");
        this.txtPeso.setText("");
        this.txtAltura.setText("");
        this.txtAreaConsulta.setText("");
    }

    private boolean validacion() {
        
        if(paciente.getDieta() == null){
            return JOptionPane.showConfirmDialog(null, "¿Está seguro de que no desea dieta?") == JOptionPane.YES_OPTION;
        }
        
        if (txtPeso.getText().equals("") || txtAltura.getText().equals("") || txtTalla.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Campos vacíos, llenelos e intentelo de nuevo");
            return false;
        }
        if (validarPeso(txtPeso.getText())) {
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un peso válido");
            this.txtPeso.setText("");
            return false;
        }
        if (validarTalla(txtTalla.getText())) {
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese una talla válida");
            this.txtTalla.setText("");
            return false;
        }
        if (validarAltura(txtAltura.getText())) {
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese una altura válida");
            this.txtAltura.setText("");
            return false;
        }
        return true;
    }

    public static boolean validarCadena(String numero) {
        if (numero.length() < 2 || numero.length() > 3) {
            return false;
        }
        for (int i = 0; i < numero.length(); i++) {
            if (!Character.isDigit(numero.charAt(i))) {
                return false;
            }
        }
        return true;
    }

    public boolean validarPeso(String peso) {
        String regex = "^\\d+(\\.\\d{1,2})?$"; // Expresión regular para números decimales con hasta dos decimales
        if (peso.matches(regex)) {
            double pesoDouble = Double.parseDouble(peso);
            if (pesoDouble > 0) {
                return true; // El peso es válido
            }
        }
        return false; // El peso no es válido
    }

    public boolean validarTalla(String talla) {
        String regex = "^\\d+(\\.\\d{1,2})?$"; // Expresión regular para números decimales con hasta dos decimales
        if (talla.matches(regex)) {
            double tallaDouble = Double.parseDouble(talla);
            if (tallaDouble > 0) {
                return true; // La talla es válida
            }
        }
        return false; // La talla no es válida
    }

    public boolean validarAltura(String altura) {
        String regex = "^\\d+(\\.\\d{1,2})?$"; // Expresión regular para números decimales con hasta dos decimales
        if (altura.matches(regex)) {
            double alturaDouble = Double.parseDouble(altura);
            if (alturaDouble > 0) {
                return true; // La altura es válida
            }
        }
        return false; // La altura no es válida
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logo;
    private javax.swing.JButton btnAgregarDieta;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnFinalzar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAltura;
    private javax.swing.JTextArea txtAreaConsulta;
    private javax.swing.JTextField txtPeso;
    private javax.swing.JTextField txtTalla;
    // End of variables declaration//GEN-END:variables
}
